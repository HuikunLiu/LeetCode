class Solution {
    public int minCost(int[][] costs) {
        if (costs == null || costs.length == 0) return 0;
        int n = costs.length;
        int[][] dp = new int[n][3];
        for (int i = 0; i < 3; i ++){
            dp[0][i] = costs[0][i];
        }
        for (int j = 1; j < n; j ++){
            dp[j][0] = Math.min(dp[j-1][1], dp[j-1][2]) + costs[j][0];
            dp[j][1] = Math.min(dp[j-1][2], dp[j-1][0]) + costs[j][1];
            dp[j][2] = Math.min(dp[j-1][1], dp[j-1][0]) + costs[j][2];

        }
        return Math.min(dp[n-1][0],Math.min(dp[n-1][1],dp[n-1][2]));

    }
}
